---
- hosts: localhost
  tasks:
  - name: create a new ec2 key pair, returns generated private key
    amazon.aws.ec2_key:
      name: my_keypair
    register: ec2_key_result

  - name: Save private key on local
    copy: content="{{ ec2_key_result.key.private_key }}" dest="~/.aws/my_keypair.pem" mode=0600
    when: ec2_key_result.changed

  - name: Create EC2 group
    amazon.aws.ec2_group:
      name: "ec2group01"
      description: allow all
      rules:
        - proto: tcp
          ports:
          - 8080
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 8080
        - proto: tcp
          ports:
          - 5000
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 5000
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 10.0.0.0/0
          rule_desc: allow all on port 22
    register: ec2group01

  - name: provision master
    amazon.aws.ec2:
      keypair: my_keypair
      group_id:
      - "{{ ec2group01.group_id }}"
      instance_type: t2.micro
      image: ami-0747bdcabd34c712a
      wait: yes
      count: 1
    register: master

  - name: associate new elastic IPs with master
    community.aws.ec2_eip:
      device_id: "{{ item }}"
      in_vpc: true
    loop: "{{ master.instance_ids }}"
    register: master_ips

  - name: output the master
    ansible.builtin.debug:
      msg: "{{ master }}"

  - name: output master_ips
    ansible.builtin.debug:
      msg: "{{ master_ips }}"

  - name: Create a fresh inventory
    shell: echo '[master]' > ./ansible_hosts

  - name: Add master to local host group
    shell: echo "{{ item.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.aws/my_keypair.pem" >> ./ansible_hosts
    with_items: "{{ master_ips.results }}"

  - name: Wait for servers to come online
    wait_for:
      host: "{{ item.public_ip }}"
      port: 22
      timeout: 180
    with_items: "{{ master_ips.results }}"

  - name: Add master as known hosts
    shell: ssh-keyscan -H "{{ item.public_ip }}"  >> ~/.ssh/known_hosts
    with_items: "{{ master_ips.results }}"

